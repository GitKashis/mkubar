-- create table users(
-- 	user_id serial primary key,
-- 	name varchar(20),
-- 	email varchar(20),
-- 	password varchar(20)
-- );
-- insert into users (name, email, password) values ('Kubar', 'm.kubar@mail.ru', 'root');
-- insert into users (name, email, password) values ('Etva', 'etwa@mail.ru', 'qwerty');
-- select * from users;

-- create table comments (
-- 	comments_id serial primary key,
-- 	name varchar(20),
-- 	texts text,
-- 	times time
-- );
-- insert into comments (name, texts, times) values ('Ru', 'Comment from Russia!', now());
-- insert into comments (name, texts, times) values ('Request', 'How to insert foreign key?', now());
-- select * from comments;

-- create table attaches (
-- 	attaches_id serial primary key,
-- 	name varchar(20),
-- 	size_kb int
-- );
-- insert into attaches (name,  size_kb) values ('Screenshot.jpg', 64);
-- insert into attaches (name,  size_kb) values ('File.dat', 1024);
-- select * from attaches;

-- create table item (
-- 	item_id serial primary key,
-- 	name varchar(20),
-- 	user_id integer references users (user_id),
--  	comments_id integer references comments (comments_id),
--  	attaches_id integer references attaches (attaches_id)
-- );
-- insert into item (name, user_id, comments_id, attaches_id) values ('first', 1, 1, 1);
-- insert into item (name, user_id, comments_id, attaches_id) values ('second', 2, 2, 2);
-- select * from item;

-- create table attaches (
-- 	attaches_id serial primary key,
-- 	name varchar(20),
-- 	size_kb int
-- );
-- insert into attaches (name,  size_kb) values ('Screenshot.jpg', 64);
-- insert into attaches (name,  size_kb) values ('File.dat', 1024);
-- select * from attaches;

-- create table role (
-- 	role_id serial primary key,
-- 	name varchar(20),
-- 	user_id integer references users(user_id)
-- );
-- insert into role (name,  user_id) values ('Ментор', 1);
-- insert into role (name,  user_id) values ('Ученик', 2);
-- select * from role;

-- create table rules (
-- 	rules_id serial primary key,
-- 	name varchar(20)
-- );
-- insert into rules (name) values ('Администратор');
-- insert into rules (name) values ('Пользователь');
-- select * from rules;

-- 
--     CREATE TABLE role_to_rules (
--             role_to_rules_id SERIAL PRIMARY KEY,
--             user_id INTEGER NOT NULL,
--             site_id INTEGER NOT NULL
--     );
-- укажем уникальные ключи
-- ALTER TABLE public.role ADD CONSTRAINT un_dep_id_constraint UNIQUE (role_id);
-- ALTER TABLE public.rules ADD CONSTRAINT un_emp_id_constraint UNIQUE (rules_id);
-- ALTER TABLE public.role_to_rules ADD CONSTRAINT un_empl_id_constraint UNIQUE (role_to_rules_id);

-- повесим каскадные связи
-- 	ALTER TABLE role_to_rules 
-- 	ADD CONSTRAINT rules_id_fk_constraint 
-- 	FOREIGN KEY (rules_id) REFERENCES rules (rules_id)
-- 	ON UPDATE CASCADE ON DELETE CASCADE;
	
-- 	ALTER TABLE role_to_rules 
-- 	ADD CONSTRAINT role_id_fk_constraint 
-- 	FOREIGN KEY (role_id) REFERENCES role (role_id)
-- 	ON UPDATE CASCADE ON DELETE CASCADE;